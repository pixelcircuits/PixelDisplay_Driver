//-----------------------------------------------------------------------
// General
//-----------------------------------------------------------------------
const uint8_t bit[8] = { 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80 };


//-----------------------------------------------------------------------
// EDMA
//-----------------------------------------------------------------------
const uint16_t pow[10] = { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512 };
const uint8_t mbr[9] = { 0, 1, 3, 7, 15, 31, 63, 127, 255 };

const uint16_t odr10[10] = { 0, TRANSFER_SIZE_24, TRANSFER_SIZE_24*2, TRANSFER_SIZE_24*3, TRANSFER_SIZE_24*4, TRANSFER_SIZE_24*5, TRANSFER_SIZE_24*6, TRANSFER_SIZE_24*7, TRANSFER_SIZE_24*8, TRANSFER_SIZE_24*9 };
const uint16_t odr6[6] = { 0, TRANSFER_SIZE_12, TRANSFER_SIZE_12*2, TRANSFER_SIZE_12*3, TRANSFER_SIZE_12*4, TRANSFER_SIZE_12*5 };


//-----------------------------------------------------------------------
// Image Data
//-----------------------------------------------------------------------
const uint8_t color_palette[4][3] = {{0,0,0}, {0,74,127}, {41,41,41}, {255,255,255}};

const uint8_t prog_size = 6;
const uint8_t prog_frames = 4;
const uint8_t prog[4][6] = {{2,10,235,186,254,42}, {40,47,139,162,254,42}, {42,47,235,186,232,32}, {42,47,226,184,190,10}};

void splash_draw() {
	int i=0;
	for(; i<DATA_BUFFER_SIZE; i++) dataBuffer_active[i] = 0x00;
}


//-----------------------------------------------------------------------
// Display
//-----------------------------------------------------------------------
const uint16_t gamma8x10[256] = { 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 11, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56, 58, 59, 61, 63, 65, 67, 69, 71, 73, 76, 78, 80, 82, 84, 87, 89, 91, 94, 96, 99, 101, 104, 106, 109, 111, 114, 117, 119, 122, 125, 128, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 161, 164, 167, 170, 174, 177, 180, 184, 187, 191, 194, 198, 201, 205, 208, 212, 216, 219, 223, 227, 231, 235, 239, 243, 247, 251, 255, 259, 263, 267, 271, 275, 279, 284, 288, 292, 297, 301, 306, 310, 315, 319, 324, 328, 333, 338, 342, 347, 352, 357, 362, 366, 371, 376, 381, 386, 391, 396, 402, 407, 412, 417, 422, 428, 433, 438, 444, 449, 455, 460, 466, 471, 477, 483, 488, 494, 500, 505, 511, 517, 523, 529, 535, 541, 547, 553, 559, 565, 571, 578, 584, 590, 596, 603, 609, 616, 622, 629, 635, 642, 648, 655, 661, 668, 675, 682, 688, 695, 702, 709, 716, 723, 730, 737, 744, 751, 758, 766, 773, 780, 787, 795, 802, 810, 817, 824, 832, 839, 847, 855, 862, 870, 878, 886, 893, 901, 909, 917, 925, 933, 941, 949, 957, 965, 973, 981, 990, 998, 1006, 1015, 1023 };
const uint16_t gamma8x10_699[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 11, 11, 12, 13, 13, 14, 15, 16, 17, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 80, 82, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 110, 112, 114, 116, 119, 121, 123, 126, 128, 130, 133, 135, 138, 140, 142, 145, 147, 150, 153, 155, 158, 160, 163, 166, 169, 171, 174, 177, 180, 182, 185, 188, 191, 194, 197, 200, 203, 206, 209, 212, 215, 218, 221, 224, 228, 231, 234, 237, 241, 244, 247, 250, 254, 257, 261, 264, 268, 271, 274, 278, 282, 285, 289, 292, 296, 300, 303, 307, 311, 315, 318, 322, 326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378, 382, 386, 391, 395, 399, 403, 408, 412, 416, 421, 425, 430, 434, 439, 443, 448, 452, 457, 461, 466, 471, 475, 480, 485, 489, 494, 499, 504, 509, 514, 518, 523, 528, 533, 538, 543, 548, 553, 558, 564, 569, 574, 579, 584, 590, 595, 600, 605, 611, 616, 621, 627, 632, 638, 643, 649, 654, 660, 665, 671, 677, 682, 688, 694, 699 };
const uint16_t gamma8x10_436[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 14, 14, 15, 15, 16, 17, 17, 18, 19, 19, 20, 21, 21, 22, 23, 24, 24, 25, 26, 27, 28, 29, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 86, 87, 89, 90, 92, 93, 95, 97, 98, 100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119, 121, 123, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 167, 169, 171, 173, 175, 178, 180, 182, 184, 187, 189, 191, 194, 196, 198, 201, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 228, 230, 233, 235, 238, 241, 243, 246, 249, 251, 254, 257, 259, 262, 265, 268, 270, 273, 276, 279, 282, 284, 287, 290, 293, 296, 299, 302, 305, 308, 311, 314, 317, 320, 323, 326, 329, 332, 335, 338, 342, 345, 348, 351, 354, 357, 361, 364, 367, 370, 374, 377, 380, 384, 387, 390, 394, 397, 401, 404, 407, 411, 414, 418, 421, 425, 428, 432, 436 };
const uint16_t gamma8x10_300[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 19, 19, 20, 20, 21, 21, 22, 23, 23, 24, 25, 25, 26, 27, 27, 28, 29, 30, 30, 31, 32, 33, 33, 34, 35, 36, 37, 37, 38, 39, 40, 41, 42, 43, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 130, 132, 133, 135, 136, 138, 140, 141, 143, 145, 146, 148, 150, 152, 153, 155, 157, 158, 160, 162, 164, 166, 167, 169, 171, 173, 175, 177, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 229, 231, 233, 235, 237, 239, 242, 244, 246, 248, 250, 253, 255, 257, 259, 262, 264, 266, 269, 271, 273, 276, 278, 280, 283, 285, 288, 290, 292, 295, 297, 300 };



/***************************************************************
 * Generating Constant Maps Through Javascript Precalculations *
 ***************************************************************

// Gamma Curve
var g = 2.1;
var n = 256;
var m = 1024;
var s = "{ ";
for(var i=1; i<n+1; i++) s += Math.round((Math.pow(i*(m/n), g)/Math.pow(m, g))*(m-1)) + ", ";
s += "}";

var div = 0.75;
var g = 2.1;
var n = 256;
var m = 1024;
var s = "{ ";
for(var i=1; i<n+1; i++) s += Math.round(((Math.pow(i*(m/n), g)/Math.pow(m, g))*(m-1)) - ((Math.pow(i*(m/n), g)/Math.pow(m, g))*(m-1))*div) + ", ";
s += "}";

// Splash Screen Load (4-color)
var i = [
	0,0,0,2,0,
	0,2,2,3,2,
	2,3,2,3,2,
	2,3,3,3,2,
	0,2,2,2
];
var i = [
	0,2,2,0,0,
	2,3,3,2,0,
	2,3,2,2,0,
	2,3,3,3,2,
	0,2,2,2
];
var i = [
	0,2,2,2,0,
	2,3,3,3,2,
	2,3,2,3,2,
	2,3,2,2,0,
	0,2,0,0
];
var i = [
	0,2,2,2,0,
	2,3,3,3,2,
	0,2,2,3,2,
	0,2,3,3,2,
	0,0,2,2
];

//Compress 4 Color Array
var o = [];
for(var s=0; s<i.length; s+=4) {
   var on = i[s+0]; on = (on<<6);
   var tw = i[s+1]; tw = (tw<<4);
   var th = i[s+2]; th = (th<<2);
   var fo = i[s+3]; fo = (fo<<0);
   o.push(on | tw | th | fo);
}
o.toString();

*/
